apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.image.name }}-statefulset
  namespace: {{ .Values.image.namespace }}
  labels:
    app: {{ .Values.image.repository }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.image.repository }}
  template:
    metadata:
      labels:
        app: {{ .Values.image.repository }}
    spec:
      containers:
        - name: {{ .Values.image.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: {{ .Values.service.name }}
              containerPort: 5432
              protocol: TCP
          env:
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: {{ .Values.image.label }}-secret
                key: POSTGRES_DB
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.image.label }}-secret
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.image.label }}-secret
                key: POSTGRES_PASSWORD
          - name: POSTGRES_HOST_AUTH_METHOD
            value: trust                
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdata
      volumes:
      - name: postgresdata
        persistentVolumeClaim:
          claimName: postgres-pv-claim
 ---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: cast-secret
  namespace: {{ .Values.image.namespace }}
data:
  POSTGRES_USER: Y2FzdF9kYl91c2VybmFtZQ==
  POSTGRES_PASSWORD: Y2FzdF9kYl9wYXNzd29yZA==
  POSTGRES_DB: Y2FzdF9kYl9kZXY=