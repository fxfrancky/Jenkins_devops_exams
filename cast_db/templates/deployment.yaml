apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.image.name }}-statefulset
  namespace: {{ .Values.image.namespace }}
  labels:
    app: {{ .Values.image.name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: {{ .Values.image.name }}
          image: 'postgres:14'
          ports:
            - name: {{ .Values.service.name }}
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: castdb-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: castdb-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: castdb-config
                  key: POSTGRES_DB
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "pg_ctl -D /var/lib/postgres/data -w -t 60 -m fast stop"]
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-pv-claim
      volumes:
      - name: postgres-pv-claim
        persistentVolumeClaim:
          claimName: postgres-pv-claim